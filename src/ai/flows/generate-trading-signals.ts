// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates trading signals based on technical indicators.
 *
 * - generateTradingSignals - A function that initiates the trading signal generation.
 * - TradingSignalsInput - The input type for the generateTradingSignals function.
 * - TradingSignalsOutput - The return type for the generateTradingSignals function.
 */

import {ai} from '@/ai/genkit';
import {
  TradingSignalsInputSchema,
  type TradingSignalsInput,
  TradingSignalsOutputSchema,
  type TradingSignalsOutput,
} from '@/lib/types';


export async function generateTradingSignals(input: TradingSignalsInput): Promise<TradingSignalsOutput> {
  return generateTradingSignalsFlow(input);
}

const generateTradingSignalsPrompt = ai.definePrompt({
  name: 'generateTradingSignalsPrompt',
  input: {schema: TradingSignalsInputSchema},
  output: {schema: TradingSignalsOutputSchema},
  prompt: `You are a trading signal generator for the cryptocurrency pair {{{pair}}} on the {{{timeframe}}} timeframe.
Analyze the following technical indicator values and generate a list of trading signals. For each indicator, provide a clear "Buy", "Sell", or "Neutral" signal, a confidence level ("High", "Medium", or "Low"), and a brief reasoning in Vietnamese.

Current Price: {{{price}}}
- RSI (14): {{{rsi}}}
- MACD (12, 26, 9): {{{macd}}}
- EMA (50): {{{ema}}}

Generate signals for the following:
1.  **RSI**: Is the asset overbought (>70), oversold (<30), or neutral?
2.  **MACD**: Is the MACD line crossing above the signal line (bullish), below (bearish), or is there no clear crossover?
3.  **EMA vs Price**: Is the current price above the 50-period EMA (bullish trend) or below it (bearish trend)?
`,
});

const generateTradingSignalsFlow = ai.defineFlow(
  {
    name: 'generateTradingSignalsFlow',
    inputSchema: TradingSignalsInputSchema,
    outputSchema: TradingSignalsOutputSchema,
  },
  async input => {
    const {output} = await generateTradingSignalsPrompt(input);
    return output!;
  }
);
